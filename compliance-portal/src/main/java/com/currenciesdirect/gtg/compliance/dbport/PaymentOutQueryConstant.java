package com.currenciesdirect.gtg.compliance.dbport;

import com.currenciesdirect.gtg.compliance.util.SearchCriteriaUtil;

/**
 * The Enum PaymentOutQueryConstant.
 *
 * @author Rajesh
 */
@SuppressWarnings("squid:S1192")
public enum PaymentOutQueryConstant {
	
	GET_PAYMENT_OUT_DETAILS("select "
			+ " por.Id, "
			+ " por.Accountid, "
			+ " por.ContactId, por.isOnQueue, "
			+ " por.Deleted,"
			+ " por.UpdatedOn,"
			+ " por.initialStatus, "
			+ " o.name as Organisation, "
			+ " por.ContractNumber, "
			+ " ( "
			+ " select "
			+ " status "
			+ " from "
			+ " PaymentComplianceStatusEnum "
			+ " where "
			+ " id = por.ComplianceStatus "
			+ " ) as PaymentOutStaus, "
			+ " poa.vBeneficiaryFirstName, "
			+ " poa.vBeneficiaryLastName, "
			+ " poa.vReasonoftransfer, "
			+ " poa.attributes as PaymentOutAttributes, "
			+ " poa.vtradeBeneficiaryId, poa.vTradeBankID,"
			+ " poa.vBeneficiaryCountry as country, "
			+ " JSON_VALUE(poa.ATTRIBUTES, '$.trade.customer_legal_entity') AS LegalEntity, "
			+ " coun.displayName   AS CountryOfBeneficiaryFullName, "
			+ " poa.vSellingAmount, "
			+ " poa.vBuyingAmount, "
			+ " poa.BeneAmount, "
			+ " poa.vBuyingCurrency as BuyCurrency, "
			+ " poa.vBeneficiaryCountry as BeneficiaryCounry, "
			+ " por.TransactionDate as DateOfPayment, "
			+ " co.name as ContactName, "
			+ "     co.POIExists AS poiExists, " //AT-3450
			+ " acc.complianceDoneOn As RegComplete, "
			+" por.IntuitionClientRiskLevel AS IntuitionRiskLevel, " //AT-4187
			+" acc.AccountTMFlag, " //AT-4451
			+" acc.Version, " //AT-4451
			+ " co.createdOn as RegIn, "
			+ " ( "
			+ " select status from ContactComplianceStatusEnum "
			+ " where id = co.ComplianceStatus "
			+ " ) as ContactComplianceStatus, "
			+ " co.TradeContactId as TradeContactId, "
			+ "                                                           por.TradePaymentId,"
			+ " coa.Attributes AS contactAttrib, "
			+ " ( "
			+ " select "
			+ " status "
			+ " from AccountComplianceStatusEnum "
			+ " where id = acc.ComplianceStatus "
			+ " ) as AccComplianceStatus, "
			+ " acc.CRMAccountID, "
			+ " acc.TradeAccountNumber, "
			+ " accAttrib.Attributes AS AccountAttrib, "
			+ " co.CRMContactID, "
			+ " ur.id AS userResourceLockId, "
			+ " ( "
			+ " SELECT SSOUserId FROM [USER] "
			+ " where id = ur.createdBy "
			+ " ) AS LockedBy, "
			+ " esl.id AS EventServiceLogId, "
			+ " esl.entityid, "
			+ " ( "
			+ " Select "
			+ " top 1 Code "
			+ " from "
			+ " Compliance_ServiceTypeEnum "
			+ " where id = esl.serviceType "
			+ " ) AS ServiceType, "
			+ " esl.entityType, "
			+ " esl.eventId, "
			+ " esl.summary, "
			+ " JSON_VALUE(esl.ProviderResponse, '$.Action') AS intuitionCurrentAction, " //AT-4962
			+ " esl.Status as EventServiceStatus, "
			+ " ( "
			+ " SELECT "
			+ " SSOUserId "
			+ " FROM "
			+ " [USER] "
			+ " where "
			+ " id = esl.UpdatedBy "
			+ " ) as EventServiceUpdatedBy, "
			+ " esl.UpdatedOn as EventServiceUpdatedOn "
			+ " from "
			+ " ( "
			+ " select "
			+ " po.* "
			+ " from "
			+ " PaymentOut po "
			+ " where "
			+ " ID = ? "
			+ " ) as por "
			+ " LEFT JOIN Organization o on "
			+ " por.OrganizationID = o.id "
			+ " LEFT JOIN PaymentOutAttribute poa on "
			+ " poa.ID = por.id "
			+ " LEFT JOIN Contact co on "
			+ " co.id = por.contactId "
			+ " LEFT JOIN ContactAttribute coa on "
			+ " coa.id = por.ContactId "
			+ " LEFT JOIN Account acc on "
			+ " acc.id = por.Accountid "
			+ " LEFT JOIN AccountAttribute accAttrib on "
			+ " accAttrib.id = por.Accountid "
			+ " LEFT JOIN country coun"
			+ "     ON coun.code = poa.vBeneficiaryCountry"
			+ " LEFT JOIN EventServiceLog esl on "
			+ " esl.id in( "
			+ " SELECT "
			+ " ESL.ID as logid "
			+ " FROM "
			+ " [EventServiceLog] ESL "
			+ " JOIN Event EV on "
			+ " ESL.EventID = EV.ID "
			+ " and EV.PaymentInID is null "
			+ " WHERE "
			+ " EV.paymentoutid = por.id "
			+ " ) "
			+ " LEFT JOIN UserResourceLock ur on "
			+ " por.Id = ur.ResourceID "
			+ " AND ur.LockReleasedOn IS NULL "
			+ " AND ur.ResourceType = 1 "
			+ " order by "
			+ " esl.serviceType, "
			+ " ESL.updatedon desc"),
	
	PAYMENT_OUT_QUEUE_CONTACT_FILTER( "SELECT B.AccountId , A.Id ContactId, ROW_NUMBER() OVER (PARTITION BY B.AccountId ORDER BY B.UpdatedOn) RNum "
			+ " FROM ContactAttribute A JOIN Contact B ON A.Id = B.ID {PAYMENTOUT_QUEUE_COUNTRY_OF_RESIDENCE_FILTER} {WATCHLIST_CATEGORY_FILTER}"),
	
	PAYMENT_OUT_QUEUE_ACCOUNT_FILTER( "SELECT A.Id AccountId"
			+ " FROM AccountAttribute A JOIN ACCOUNT B ON A.id = B.id"),
	
	PAYMENT_OUT_QUEUE_PAYMENT_FILTER( "SELECT P.Id AS PaymentId"
			+ " FROM Comp.PaymentOutAttribute P {COUNTRY_JOIN}  "),
	
	CONTACT_FILTER_JOIN(" LEFT JOIN ContactAttributeFilter CF ON Payout.ContactId = CF.ContactId"),
	ACCOUNT_FILTER_JOIN(" LEFT JOIN AccountAttributeFilter AF ON Payout.AccountId = AF.AccountId "),
	WATCHLIST_CATEGORY_FILTER(" LEFT JOIN ContactWatchList CL ON CL.contact=B.id JOIN watchlist W ON CL.reason=w.id AND w.category IN(?) "),
	PAYMENT_FILTER_JOIN(" JOIN PaymentAttributeFilter PF ON PF.PaymentId = payOut.id "),
	ORG_FILTER_JOIN("JOIN Organization org  ON org.Id = payout.organizationID"),
	LEGEL_ENTITY_TABLE_JOIN("JOIN LegalEntity le ON payout.LegalEntityID = le.ID"),
	COUNTRY_FILTER_JOIN("LEFT JOIN  country c ON c.code=P.vBeneficiaryCountry"),
	REPORT_FILTER_NULL_CHECK(" (CF.ContactId IS NOT NULL OR AF.AccountId IS NOT NULL) "),
	PAYMENTOUT_QUEUE_COUNTRY_OF_RESIDENCE_FILTER("JOIN country cor ON cor.id = B.country"),
	
	PAYMENT_QUEUE_FILTER("SELECT payOut.id AS resourceID, resourceType, ur.createdby  "
			+ "FROM paymentout payOut LEFT JOIN  userresourcelock ur ON ur.resourceID = payOut.id and ur.Lockreleasedon is NULL AND resourceType = 1 AND ur.LockReleasedOn IS NULL  "
			+ " {CONTACT_FILTER_JOIN} {ACCOUNT_FILTER_JOIN} {PAYMENT_TABLE_JOIN} {ORG_JOIN} {USER_JOIN} {LEGAL_ENTITY_JOIN} JOIN PaymentOutAttribute poa ON poa.id = payOut.id JOIN Account acc ON payout.accountid = acc.id "
			+ " WHERE payOut.ComplianceStatus=4 AND payOut.deleted = 0 AND payOut.isOnQueue = 1"),
	
	GET_PAYMENTOUT_QUEUE("DECLARE @Offset int = ?, @Rows int = ?;"
			+ "WITH "
			+ "ContactAttributeFilter AS "
			+ "( "
			+ "    {PAYMENT_OUT_QUEUE_CONTACT_FILTER} "
			+ "), "
			+ "AccountAttributeFilter AS "
			+ "( "
			+ "    {PAYMENT_OUT_QUEUE_ACCOUNT_FILTER} "
			+ "), "
			+ "PaymentAttributeFilter AS "
			+ "( "
			+ "    {PAYMENT_OUT_QUEUE_PAYMENT_FILTER} "
			+ "), "
			+ "SelectedId AS "
			+ "( "
			+ "    {PAYMENT_QUEUE_FILTER} "
			+ "    Order BY {SORT_FIELD_NAME} {ORDER_TYPE} OFFSET @Offset ROWS FETCH NEXT @rows ROWS ONLY "
			+ ") "
			+ "SELECT payout.id AS PaymentOutID, "
			+ "    payout.accountid AS AccountId, "
			+ "    payout.contactid AS ContactId, "
			+ "    payout.compliancestatus AS ComplianceStatus, "
			+ "    payOut.contractnumber AS Transactions, "
			+ "    acc.tradeaccountnumber AS Client, "
			+ "     acc.crmaccountid        AS ACSFID, "
			+ "    payOut.transactiondate AS [Date], "
			+ "        acc.[type] "
			+ "     AS Type, "
			+ "    CASE "
			+ "        WHEN acc.[type] = 2 THEN con.NAME "
			+ "        ELSE acc.NAME "
			+ "    END AS clientname, "
			+ "    poa.vbuyingcurrency AS Buy, "
			+ "    poa.vbuyingamount AS Amount, "
			+ "    poa.vBeneficiaryAmount AS BeneficiaryAmount, "
			+ "    concat(poa.vBeneficiaryFirstName,' ', poa.vBeneficiaryLastName) AS Beneficiary,  "
			+ "    poa.vReasonOfTransfer  AS ReasonOfTransfer, "
			+ "    ResourceId, "
			+ "    us.ssouserid AS LockedBy, "
			+ "    org.NAME AS Organization, "
			+ "    acc.LegalEntity, "	
			+ "    poa.vvalueDate AS valueDate, "
			+ "    poa.vMaturityDate AS maturityDate,"
			+ "    c.DisplayName AS Country, "
			+ "    c.Code AS IsoCountry, "
			+ "    pcse.status AS OverAllStatus, "
			+ "    CASE "
			+ "    WHEN acc.[type] = 2 THEN con.PayOutWatchListStatus  "
			+ "   ELSE acc.PayOutWatchListStatus  END AS WatchListStatus, "//Changes for 2986
			+ "    payOut.blackliststatus, "
			+ "    payOut.fraugsterstatus, "
			+ "    payOut.sanctionstatus, "
			+ "    payOut.customcheckstatus, "
			+ "    payOut.intuitionCheckStatus, " // AT-4607
			+ "    payOut.PaymentReferenceStatus "//changes for AT-3854
			+ "FROM paymentout payOut "
			+ "JOIN SelectedId pq ON pq.resourceID = payOut.id "
			+ "JOIN paymentoutattribute poa ON "
			+ "    payout.id = poa.id "
			+ "JOIN paymentcompliancestatusenum pcse ON "
			+ "    payout.compliancestatus = pcse.id "
			+ "JOIN account acc ON "
			+ "    payOut.accountid = acc.id "
			+ "JOIN contact con ON "
			+ "    payOut.contactid = con.id "
			+ "JOIN organization org ON "
			+ "    org.id = acc.organizationid "
			+ " LEFT JOIN  country c ON c.code=poa.vBeneficiaryCountry  "
			+ "LEFT JOIN [user] us ON "
			+ "    us.id = pq.createdby order by {SORT_FIELD_NAME} {ORDER_TYPE}"),
	
	
	GET_PAYMENTOUT_REPORT_COUNT(
			"WITH "
			+ "ContactAttributeFilter AS "
			+ "( "
			+ "    {PAYMENT_OUT_QUEUE_CONTACT_FILTER} "
			+ "), "
			+ "AccountAttributeFilter AS "
			+ "( "
			+ "    {PAYMENT_OUT_QUEUE_ACCOUNT_FILTER} "
			+ "), "
			+ "PaymentAttributeFilter AS "
			+ "( "
			+ "    {PAYMENT_OUT_QUEUE_PAYMENT_FILTER} "
			+ "), "
			+ "SelectedId AS "
			+ "( "
			+ "    {PAYMENT_QUEUE_FILTER} "
			+ ") "
			+ "SELECT count(payout.id) as TotalRows  "
			+ "FROM "
			+ "    paymentout payOut "
			+ "JOIN SelectedId pq ON pq.resourceID = payOut.id "
			+ "JOIN paymentoutattribute poa ON "
			+ "    payout.id = poa.id "
			+ "JOIN paymentcompliancestatusenum pcse ON "
			+ "    payout.compliancestatus = pcse.id "
			+ "JOIN account acc ON "
			+ "    payOut.accountid = acc.id "
			+ "JOIN contact con ON "
			+ "    payOut.contactid = con.id "
			+ "JOIN organization org ON "
			+ "    org.id = acc.organizationid "
			+ "LEFT JOIN [user] us ON "
			+ "    us.id = pq.createdby"),
	
	GET_PAYMENTOUT_QUEUE_WITHOUT_PAGINATION("SELECT Count(*) AS count from( SELECT * FROM "
		+ " (SELECT payout.id                                AS PaymentOutID, "
		+ " payout.accountid                         AS AccountId, "
		+ " payout.contactid                         AS ContactId, "
		+ " payout.compliancestatus                  AS ComplianceStatus, "
		+ " payOut.deleted                           AS Deleted, "
		+ " payOut.contractnumber                    AS Transactions, "
		+ " acc.tradeaccountnumber                   AS Client, "
		+ " payOutAttri.transactiondate              AS [Date], "
		+ " con.NAME                                 AS ClientName, "
		+ " acc.Type                                 AS Type, "
		+ " payOutAttri.buyingcurrency               AS Buy, "
		+ " payOutAttri.buyingamount                 AS Amount, "
		+ " payOutAttri.beneficiaryfirstname "
		+ " + payOutAttri.beneficiarylastname        AS Beneficiary, "
		+ " ur.id                                    AS ResourceId, "
		+ " ur.createdBy as LockedBy, "
		+ " (SELECT name FROM Organization WHERE Id = acc.OrganizationID) AS Organization, "
		+ " (SELECT code AS Country "
		+ " FROM   country "
		+ " WHERE  id = (SELECT beneficiarycountry "
		+ " FROM   paymentoutattribute pa "
		+ " WHERE  pa.id = payOut.id)) AS Country, "
		+ " (SELECT status "
		+ " FROM   paymentcompliancestatusenum "
		+ " WHERE  id = (SELECT compliancestatus "
		+ " FROM   paymentout po "
		+ " WHERE  payOut.id = po.id)) AS OverAllStatus "
		+ " , "
		+ " (SELECT Count(*) "
		+ " FROM   contactwatchlist cw "
		+ " WHERE  cw.contact IN ( select id  from contact where accountid=payOut.accountid))   AS "
		+ " WatchListStatus, "
		+ " (SELECT TOP 1 status FROM   eventservicelog esl "
		+ " WHERE  esl.servicetype = (SELECT id FROM compliance_servicetypeenum "
		+ " WHERE  code = 'BLACKLIST') "
		+ " AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)) AS  BlackListStatus, "
		+ " (SELECT "
		+ " TOP 1 status FROM   eventservicelog esl "
		+ " WHERE  "
		+ " esl.servicetype = (SELECT id "
		+ " FROM compliance_servicetypeenum "
		+ " WHERE  code = 'FRAUGSTER') "
		+ " AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)) AS FraugsterStatus, "
		+ " (SELECT TOP 1 status "
		+ "                             FROM   "
		+ " eventservicelog esl "
		+ "                             WHERE  esl.servicetype = (SELECT id FROM compliance_servicetypeenum  WHERE  code = 'SANCTION' ) "
		+ "                                    and esl.EntityType = 'CONTACT' AND "
		+ " payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)order by esl.id desc) "
		+ "                            AS SanctionConStatus , "
		+ "                            (SELECT TOP 1 status FROM   eventservicelog esl WHERE  esl.servicetype = (SELECT id "
		+ "                                                       FROM compliance_servicetypeenum  WHERE  code = 'SANCTION' ) "
		+ " and esl.EntityType = 'BENEFICIARY' AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)order by esl.id desc) "
		+ "                            AS SanctionBeneStatus , "
		+ "                            (SELECT TOP 1 status FROM   eventservicelog esl WHERE  esl.servicetype = (SELECT id "
		+ "                                                       FROM compliance_servicetypeenum WHERE  code = 'SANCTION' ) and esl.EntityType = 'BANK' "
		+ "                                    AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)order by esl.id desc) "
		+ "                            AS SanctionBankStatus "
		+ " FROM   paymentout payOut "
		+ " "
		+ " JOIN paymentoutattribute payOutAttri "
		+ " ON payout.id = payOutAttri.id "
		+ " JOIN account acc "
		+ " ON payOut.accountid = acc.id "
		+ " JOIN contact con "
		+ " ON payOut.contactid = con.id "
		+ " LEFT JOIN userresourcelock ur "
		+ " ON payout.id = ur.resourceid "
		+ " AND ur.lockreleasedon IS NULL AND ur.resourcetype = 'PAYMENT_OUT') AS PQueue "
		+ " WHERE  compliancestatus <> 1 "
		+ " AND Deleted <> 1)AS PQueue2"),
				
	GET_PAYMENTOUT_QUEUE_PAGINATION_WITH_CRITERIA("Select * from ({INNER_QUERY}) AS pqueue3 "
			+ "WHERE  rownum >= ? "
			+ "AND    rownum <= ?"),
	
	GET_PAYMENTOUT_QUEUE_PAGINATION_WITH_CRITERIA_SELECT("WITH poque AS " 
			+ " ( "
			+" {INNER_QUERY}"
			+ "  ) "
			+ "    SELECT "
			+ "    *, ( SELECT max (rownum) FROM poque) AS 'TotalRows' "
			+ " FROM poque "
			+ " WHERE rownum >= ? "
			+ "  AND rownum <= ? "),
	
	GET_PAYMENTOUT_QUEUE_FOR_PAGINATION_FILTER("Select pqueue3.* from ({INNER_QUERY} ) as pqueue2 ) AS pqueue3 "
			+ "WHERE  rownum IN (?,?,?,?) "),
			    
	GET_PAYMENTOUT_ID_PAGINATION_WITH_CRITERIA("Select pqueue3.paymentOutId from ({INNER_QUERY}) AS pqueue3 "
			+ "WHERE  rownum >= ? "
			+ "AND    rownum <= ?"),
	
	GET_PAYMENTOUT_QUEUE_COUNT("SELECT COUNT(*) as count FROM PaymentOut WHERE complianceStatus<>1"),
	
	GET_PAYMENTOUT_QUEUE_PAGINATION("SELECT * "
			+ "     FROM   (SELECT Row_number() "
			+ "     OVER ( "
			+ "            ORDER BY paymentoutid DESC) AS rownum, "
			+ "        PQueue.* "
			+ "             FROM   (SELECT payout.id                                AS PaymentOutID, "
			+ "              payout.accountid                         AS AccountId, "
			+ "                            payout.contactid                         AS ContactId, "
			+ "                            payout.compliancestatus                  AS ComplianceStatus, "
			+ "                            payOut.deleted                           AS Deleted, "
			+ "                            payOut.contractnumber                    AS Transactions, "
			+ "                            acc.tradeaccountnumber                   AS Client, "
			+ "                            payOutAttri.transactiondate              AS [Date], "
			+ "                            con.NAME                                 AS ClientName, "
			+ "                            acc.Type                                 AS Type, "
			+ "                            payOutAttri.buyingcurrency               AS Buy, "
			+ "                            payOutAttri.buyingamount                 AS Amount, "
			+ "                            payOutAttri.beneficiaryfirstname "
			+ "                             +' '+  payOutAttri.beneficiarylastname        AS Beneficiary, "
			+ "                            ur.id                                    AS ResourceId, "
			+ "                            ur.createdBy as LockedBy, "
			+ "                            (SELECT name FROM Organization WHERE Id = acc.OrganizationID) AS Organization, "
			+ "                            (SELECT code AS Country "
			+ "                             FROM   country "
			+ "                             WHERE  id = (SELECT beneficiarycountry "
			+ "                                          FROM   paymentoutattribute pa "
			+ "                                          WHERE  pa.id = payOut.id)) AS Country, "
			+ "                            (SELECT status "
			+ "                             FROM   paymentcompliancestatusenum "
			+ "                             WHERE  id = (SELECT compliancestatus "
			+ "                                          FROM   paymentout po "
			+ "                                          WHERE  payOut.id = po.id)) AS OverAllStatus "
			+ "                            , "
			+ "                            (SELECT Count(*) "
			+ "                             FROM   contactwatchlist cw "
			+ "                             WHERE  cw.contact IN ( select id  from contact where accountid=payOut.accountid))   AS "
			+ "                            WatchListStatus, "
			+ "                            (SELECT "
			+ "                                 TOP 1 status "
			+ "                             FROM   "
			+ "                                 eventservicelog esl "
			+ "                             WHERE  esl.servicetype = (SELECT id FROM compliance_servicetypeenum  WHERE  code = 'BLACKLIST') "
			+ "                                    AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)) "
			+ "                                  AS "
			+ "                            BlackListStatus, "
			+ "                            (SELECT TOP 1 status FROM  eventservicelog esl "
			+ "                             WHERE  esl.servicetype = (SELECT id FROM compliance_servicetypeenum WHERE  code = 'FRAUGSTER') AND "
			+ "                             payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)) "
			+ "                                       AS "
			+ "                            FraugsterStatus, "
			+ "                            (SELECT TOP 1 status FROM   eventservicelog esl "
			+ "                             WHERE  esl.servicetype = (SELECT id FROM compliance_servicetypeenum WHERE  code = 'SANCTION' ) "
			+ "                                    and esl.EntityType = 'CONTACT' "
			+ "                                    AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc) order by esl.id desc) AS SanctionConStatus , "
			+ "                            (SELECT TOP 1 status FROM   eventservicelog esl WHERE  esl.servicetype = (SELECT id FROM "
			+ "                                    compliance_servicetypeenum WHERE  "
			+ "                                         code = 'SANCTION' ) "
			+ "                                    and esl.EntityType = 'BENEFICIARY' "
			+ "                                    AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc) order by esl.id desc) AS SanctionBeneStatus , "
			+ "                            (SELECT TOP 1 status FROM   eventservicelog esl  WHERE  esl.servicetype = (SELECT id FROM compliance_servicetypeenum   WHERE  code = 'SANCTION' ) "
			+ "                                    and esl.EntityType = 'BANK' "
			+ "                                    AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc) order by esl.id desc) AS SanctionBankStatus "
			+ "                     FROM   paymentout payOut "
			+ " "
			+ "                            JOIN paymentoutattribute payOutAttri "
			+ "                              ON payout.id = payOutAttri.id "
			+ "                            JOIN account acc "
			+ "                              ON payOut.accountid = acc.id "
			+ "                            JOIN contact con "
			+ "                              ON payOut.contactid = con.id "
			+ "                            LEFT JOIN userresourcelock ur "
			+ "                                   ON payout.id = ur.resourceid "
			+ "                                      AND ur.lockreleasedon IS NULL AND ur.resourcetype = 'PAYMENT_OUT') AS PQueue "
			+ "             WHERE  compliancestatus <> 1 "
			+ "                    AND Deleted <> 1)AS PQueue2 "
			+ "     WHERE  rownum >= ? "
			+ "            AND rownum <= ?"),
	
	//Beneficiary first name and last name are fetched again to set them separately on UI
	GET_PAYMENTOUT_QUEUE_PAGINATION_WITH_SELECT("WITH poque AS( "
+ " SELECT "
+ " Row_number() OVER( ORDER BY payout.id DESC ) AS rownum, "
+ " payout.id AS PaymentOutID, "
+ " payout.accountid AS AccountId, "
+ " payout.contactid AS ContactId, "
+ " payout.compliancestatus AS ComplianceStatus, "
+ " payOut.contractnumber AS Transactions, "
+ " acc.tradeaccountnumber AS Client, "
+ " poa.transactiondate AS [Date], "
+ " acc.[type] AS Type, "
+ " case when  acc.[type]='PFX' then con.NAME "
+ "     when acc.[type]='CFX' then acc.NAME "
+ "     END as clientname,"
+ " poa.buyingcurrency AS Buy, "
+ " poa.buyingamount AS Amount, "
+ "     poa.Attributes AS Attributes,  poa.BeneAmount AS BeneficiaryAmount, "
+ "     poa.beneficiaryfirstname AS BeneficiaryFirstName, "
+ "     poa.beneficiarylastname AS BeneficiaryLastName, "
+ " ur.id AS ResourceId, "
+ " us.SSOUserId AS LockedBy, "
+ " org.NAME AS Organization, "
+ " ctr.code AS Country, "
+ " pcse.status AS OverAllStatus, "
+ " acc.WatchlistStatus AS WatchListStatus, "
+ " payOut.BlacklistStatus, "
+ " payOut.FraugsterStatus, "
+ " payOut.SanctionStatus, "
+ " payOut.CustomCheckStatus "
+ " FROM paymentout payOut "
+ " JOIN paymentoutattribute poa ON payout.id = poa.id "
+ " JOIN paymentcompliancestatusenum pcse ON  payout.compliancestatus = pcse.id "
+ " JOIN account acc ON payOut.accountid = acc.id "
+ " JOIN contact con ON payOut.contactid = con.id "
+ " JOIN Country ctr ON poa.beneficiarycountry = ctr.id "
+ " JOIN organization org ON org.id = acc.organizationid "
+ " LEFT JOIN userresourcelock ur ON  payout.id = ur.resourceid "
+ " AND ur.resourcetype = 'PAYMENT_OUT' "
+ " LEFT JOIN [user] us ON us.id = ur.createdby "
+ " WHERE "
+ " poa.transactiondate > DATEADD(day,-" + SearchCriteriaUtil.getDefaultQueueRecordSize() + ",GETDATE()) "
+ " and payOut.ComplianceStatus = 4 "
+ " AND payOut.deleted = 0 "
+ " AND ur.lockreleasedon IS NULL "
+ ") SELECT *, (SELECT max( rownum ) FROM poque ) AS 'TotalRows' "
+ "FROM poque "
+ "WHERE "
+ " rownum >= ? "
+ " AND rownum <= ? "),
	
	GET_PAYMENTOUT_QUEUE_INNER_QUERY("SELECT Row_number() OVER ( ORDER BY {SORT_FIELD_NAME} {ORDER_TYPE}) AS rownum, "
			+ " PQueue2.* "
			+ " FROM (select pqueue.* from "
			+ " (SELECT payout.id                                AS PaymentOutID, "
			+ " payout.accountid                         AS AccountId, "
			+ " payout.contactid                         AS ContactId, "
			+ " payout.compliancestatus                  AS ComplianceStatus, "
			+ " payOut.deleted                           AS Deleted, "
			+ " payOut.contractnumber                    AS Transactions, "
			+ " acc.tradeaccountnumber                   AS Client, "
			+ " payOutAttri.transactiondate              AS [Date], "
			+ " con.NAME                                 AS ClientName, "
			+ " acc.Type                                 AS Type, "
			+ " payOutAttri.buyingcurrency               AS Buy, "
			+ " payOutAttri.buyingamount                 AS Amount, "
			+ " payOutAttri.beneficiaryfirstname "
			+ " +' '+  payOutAttri.beneficiarylastname        AS Beneficiary, "
			+ " ur.id                                    AS ResourceId, "
			+ " ur.createdBy as LockedBy, "
			+ " (SELECT name FROM Organization WHERE Id = acc.OrganizationID) AS Organization, "
			+ " (SELECT code AS Country "
			+ " FROM   country "
			+ " WHERE  id = (SELECT beneficiarycountry "
			+ " FROM   paymentoutattribute pa "
			+ " WHERE  pa.id = payOut.id)) AS Country, "
			+ " (SELECT status "
			+ " FROM   paymentcompliancestatusenum "
			+ " WHERE  id = (SELECT compliancestatus "
			+ " FROM   paymentout po "
			+ " WHERE  payOut.id = po.id)) AS OverAllStatus "
			+ " , "
			+ " (SELECT Count(*) "
			+ " FROM   contactwatchlist cw "
			+ " WHERE  cw.contact IN ( select id  from contact where accountid=payOut.accountid))   AS "
			+ " WatchListStatus, "
			+ " (SELECT TOP 1 status "
			+ " FROM   eventservicelog esl "
			+ " WHERE  esl.servicetype = (SELECT id "
			+ " FROM "
			+ " compliance_servicetypeenum "
			+ " WHERE  code = 'BLACKLIST') "
			+ " AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)) "
			+ " AS "
			+ " BlackListStatus, "
			+ " (SELECT TOP 1 status "
			+ " FROM   eventservicelog esl "
			+ " WHERE  esl.servicetype = (SELECT id "
			+ " FROM "
			+ " compliance_servicetypeenum "
			+ " WHERE  code = 'FRAUGSTER') "
			+ " AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc)) "
			+ " AS "
			+ " FraugsterStatus, "
			+ " (SELECT TOP 1 status FROM   eventservicelog esl WHERE  esl.servicetype = (SELECT id "
			+ "                                                       FROM  compliance_servicetypeenum "
			+ "                                                       WHERE  code = 'SANCTION' ) and esl.EntityType = 'CONTACT' "
			+ "                                    AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc) order by esl.id desc) "
			+ "                            AS SanctionConStatus , "
			+ "                            (SELECT TOP 1 status "
			+ "                             FROM   eventservicelog esl "
			+ "                             WHERE  esl.servicetype = (SELECT id "
			+ "                                                       FROM "
			+ "                                    compliance_servicetypeenum "
			+ "                                                       WHERE  code = 'SANCTION' ) "
			+ "                                    and esl.EntityType = 'BENEFICIARY' "
			+ "                                    AND "
			+ " payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc) order by esl.id desc) "
			+ "                            AS SanctionBeneStatus , "
			+ "                            (SELECT TOP 1 status "
			+ "                             FROM   eventservicelog esl "
			+ "                             WHERE  esl.servicetype = (SELECT id "
			+ "                                                       FROM "
			+ "                                    compliance_servicetypeenum "
			+ "                                                       WHERE  code = 'SANCTION' ) "
			+ "                                    and esl.EntityType = 'BANK' "
			+ "                                    AND payOut.id = (select top 1 paymentoutid from event where id in (esl.eventid) order by id desc) "
			+ " order by esl.id desc) "
			+ "                            AS SanctionBankStatus "
			+ " FROM   paymentout payOut "
			+ " "
			+ " JOIN paymentoutattribute payOutAttri "
			+ " ON payout.id = payOutAttri.id "
			+ " JOIN account acc "
			+ " ON payOut.accountid = acc.id "
			+ " JOIN contact con "
			+ " ON payOut.contactid = con.id "
			+ " LEFT JOIN userresourcelock ur "
			+ " ON payout.id = ur.resourceid "
			+ " AND ur.lockreleasedon IS NULL AND ur.resourcetype = 'PAYMENT_OUT') AS PQueue "
			+ " WHERE  compliancestatus <> 1 "
			+ " AND Deleted <> 1)AS PQueue2"),
	
	GET_PAYMENTOUT_QUEUE_INNER_QUERY_SELECT("select Row_number() OVER ( ORDER BY PaymentOutID DESC) AS rownum,PQ.* from ( "
			+ " select payout.id AS PaymentOutID, "
			+ " payout.accountid AS AccountId, "
			+ " payout.contactid AS ContactId, "
			+ " payout.compliancestatus AS ComplianceStatus, "
			+ " payOut.contractnumber AS Transactions, "
			+ " acc.tradeaccountnumber AS Client, "
			+ " case when  acc.[type]=2 then 'PFX' "
			+ " when acc.[type]=1 then 'CFX' "
			+ " END  AS [Type], "
			+ " case when  acc.[type]=2 then con.NAME "
			+ " when acc.[type]=1 then acc.NAME "
			+ "     END as clientname,"
			+ " payout.TransactionDate AS [Date], "
			+ " poa.vbuyingcurrency AS Buy, "
			+ " poa.vbuyingamount AS Amount, "
			+ "     poa.Attributes AS Attributes,  poa.BeneAmount AS BeneficiaryAmount, "
			+ " poa.vbeneficiaryfirstname AS BeneficiaryFirstName, "
			+ " poa.vbeneficiarylastname AS BeneficiaryLastName, "
			+ " ur.id AS ResourceId, "
			+ " us.SSOUserId AS LockedBy, "
			+ " org.NAME AS Organization, "
			+ " poa.vbeneficiarycountry AS Country, "
			+ " ctr.displayName AS CountryDisplayName , "
			+ " pcse.status AS OverAllStatus, "
			+ " acc.WatchlistStatus AS WatchListStatus, "
			+ " payOut.BlacklistStatus AS BlacklistStatus, "
			+ " payOut.FraugsterStatus, "
			+ " payOut.SanctionStatus, "
			+ " payOut.CustomCheckStatus "
			+ " FROM paymentout payOut "
			+ " JOIN paymentoutattribute poa ON payout.id = poa.id "
			+ " JOIN paymentcompliancestatusenum pcse ON  payout.compliancestatus = pcse.id "
			+ " JOIN account acc ON payOut.accountid = acc.id "
			+ " JOIN contact con ON payOut.contactid = con.id "
			+ " JOIN organization org ON org.id = acc.organizationid "
			+ " LEFT JOIN Country ctr ON ctr.code = poa.vbeneficiarycountry "
			+ " LEFT JOIN userresourcelock ur ON  payout.id = ur.resourceid "
			+ " AND ur.resourcetype = 1 AND ur.lockreleasedon IS NULL "
			+ " LEFT JOIN [user] us ON us.id = ur.createdby "
			+ " WHERE "
			+ " payOut.complianceStatus= 4 ) as PQ"),
						    
	GET_PAYMENTOUT_DETAILS_BY_RECORD_NUM("SELECT por.id, "
			+ "       por.accountid, "
			+ "       por.contactid, "
			+ "       o.NAME                               AS Organisation, "
			+ "       por.contractnumber, "
			+ "       (SELECT status FROM   paymentcompliancestatusenum "
			+ "        WHERE  id = por.compliancestatus)   AS PaymentOutStaus, "
			+ "       poa.beneficiaryfirstname, "
			+ "       poa.beneficiarylastname, "
			+ "       poa.reasonoftransfer, "
			+ "       poa.attributes                       AS PaymentOutAttributes, "
			+ "       (SELECT displayname FROM   country "
			+ "        WHERE  id = poa.beneficiarycountry) AS country, "
			+ "       poa.sellingamount, "
			+ "       poa.buyingamount, "
			+ "       poa.buyingcurrency                   AS BuyCurrency, "
			+ "       (SELECT code FROM   country "
			+ "        WHERE  id = poa.beneficiarycountry) AS BeneficiaryCounry, "
			+ "       poa.transactiondate                  AS DateOfPayment, "
			+ "       co.NAME                              AS ContactName, "
			+ "       co.createdon                         AS RegIn, "
			+ "       (SELECT status FROM   contactcompliancestatusenum "
			+ "        WHERE  id = co.compliancestatus)    AS ContactComplianceStatus, "
			+ "       co.tradecontactid                    AS TradeContactId, "
			+ "       coa.attributes                       AS contactAttrib, "
			+ "       (SELECT status FROM   accountcompliancestatusenum "
			+ "        WHERE  id = acc.compliancestatus)   AS AccComplianceStatus, "
			+ "       acc.crmaccountid, "
			+ "       acc.tradeaccountnumber, "
			+ "       accAttrib.attributes                 AS AccountAttrib, "
			+ "       co.CRMContactID, co.complianceDoneOn As RegComplete,"
			+ "       ur.id                                AS userResourceLockId, "
			+ "       ur.createdby                         AS LockedBy, "
			+ "       esl.id                               AS EventServiceLogId, "
			+ "       esl.entityid, "
			+ "       (SELECT TOP 1 code "
			+ "        FROM   compliance_servicetypeenum "
			+ "        WHERE  id = esl.servicetype)        AS ServiceType, "
			+ "       esl.entitytype, "
			+ "       esl.eventid, "
			+ "       esl.summary, "
			+ "       esl.status                           AS EventServiceStatus, "
			+ "       esl.updatedby                        AS EventServiceUpdatedBy, "
			+ "       esl.updatedon                        AS EventServiceUpdatedOn "
			+ "FROM   (SELECT po.* "
			+ "        FROM   paymentout po "
			+ "        WHERE  id = (select paymentoutid from(SELECT ROW_NUMBER() OVER (ORDER BY ID DESC)AS RowNum,id AS paymentoutid "
			+ "            from PaymentOut WHERE ComplianceStatus<>1)AS RowConstrainedResult WHERE RowNum=?)) AS por "
			+ "       LEFT JOIN organization o "
			+ "              ON por.organizationid = o.id "
			+ "       LEFT JOIN paymentoutattribute poa "
			+ "              ON poa.id = por.id "
			+ "       LEFT JOIN contact co "
			+ "              ON co.id = por.contactid "
			+ "       LEFT JOIN contactattribute coa "
			+ "              ON coa.id = por.contactid "
			+ "       LEFT JOIN account acc "
			+ "              ON acc.id = por.accountid "
			+ "       LEFT JOIN accountattribute accAttrib "
			+ "              ON accAttrib.id = por.accountid "
			+ "       LEFT JOIN eventservicelog esl "
			+ "              ON esl.id IN (SELECT Max(ESL.id) AS logid "
			+ "                            FROM   [eventservicelog] ESL "
			+ "                                   JOIN event EV "
			+ "                                     ON ESL.eventid = EV.id "
			+ "                            WHERE  EV.paymentoutid = por.id "
			+ "                            GROUP  BY esl.servicetype, "
			+ "                                      esl.entitytype) "
			+ "       LEFT JOIN userresourcelock ur "
			+ "              ON por.id = ur.resourceid "
			+ "                 AND ur.lockreleasedon IS NULL "
			+ "                 AND ur.resourcetype = 'PAYMENT_OUT' "
			+ "ORDER  BY esl.servicetype"),
				
				
	GET_PAYMENTOUT_DETAILS_BY_PAYMENTOUTID("SELECT por.id, "
			+ "       por.accountid, "
			+ "       por.contactid, "
			+ "       o.NAME                               AS Organisation, "
			+ "       por.contractnumber, "
			+ "       (SELECT "
			+ "          status "
			+ "        FROM   paymentcompliancestatusenum "
			+ "        WHERE  id = por.compliancestatus)   AS PaymentOutStaus, "
			+ "       poa.beneficiaryfirstname, "
			+ "       poa.beneficiarylastname, "
			+ "       poa.reasonoftransfer, "
			+ "       poa.attributes                       AS PaymentOutAttributes, "
			+ "       poa.tradeBeneficiaryId,"	
			+ "       por.TradePaymentId,"
			+ "       (SELECT displayname "
			+ "        FROM   country WHERE  id = poa.beneficiarycountry) AS country, "
			+ "       poa.sellingamount, "
			+ "       poa.buyingamount, "
			+ "       poa.buyingcurrency                   AS BuyCurrency, "
			+ "       (SELECT code "
			+ "        FROM   country "
			+ "        WHERE  id = poa.beneficiarycountry) AS BeneficiaryCounry, "
			+ "       poa.transactiondate                  AS DateOfPayment, "
			+ "       co.NAME                              AS ContactName, "
			+ "       co.createdon                         AS RegIn, "
			+ "       (SELECT status "
			+ "        FROM   contactcompliancestatusenum "
			+ "        WHERE  id = co.compliancestatus)    AS ContactComplianceStatus, "
			+ "       co.tradecontactid                    AS TradeContactId, "
			+ "       coa.attributes                       AS contactAttrib, "
			+ "       (SELECT status "
			+ "        FROM   "
			+ "        accountcompliancestatusenum "
			+ "        WHERE  id = acc.compliancestatus)   AS AccComplianceStatus, "
			+ "       acc.crmaccountid, "
			+ "       acc.tradeaccountnumber, "
			+ "       accAttrib.attributes                 AS AccountAttrib, "
			+ "       co.CRMContactID, co.complianceDoneOn As RegComplete,"
			+ "       ur.id                                AS userResourceLockId, "
			+ "       ur.createdby                         AS LockedBy, "
			+ "       esl.id                               AS EventServiceLogId, "
			+ "       (SELECT TOP 1 code "
			+ "        FROM   compliance_servicetypeenum "
			+ "        WHERE  id = esl.servicetype)        AS ServiceType, "
			+ "       esl.entitytype, "
			+ "       esl.eventid,  esl.entityid,"
			+ "       esl.summary, "
			+ "       esl.status                           AS EventServiceStatus, "
			+ "       esl.updatedby                        AS EventServiceUpdatedBy, "
			+ "       esl.updatedon                        AS EventServiceUpdatedOn "
			+ "FROM   (SELECT po.* "
			+ "        FROM   paymentout po "
			+ "        WHERE  id = ("+GET_PAYMENTOUT_ID_PAGINATION_WITH_CRITERIA.getQuery()+")) AS por "
			+ "       LEFT JOIN organization o "
			+ "              ON por.organizationid = o.id "
			+ "       LEFT JOIN paymentoutattribute poa "
			+ "              ON poa.id = por.id "
			+ "       LEFT JOIN contact co "
			+ "              ON co.id = por.contactid "
			+ "       LEFT JOIN contactattribute coa "
			+ "              ON coa.id = por.contactid "
			+ "       LEFT JOIN account acc "
			+ "              ON acc.id = por.accountid "
			+ "       LEFT JOIN accountattribute accAttrib "
			+ "              ON accAttrib.id = por.accountid "
			+ "       LEFT JOIN eventservicelog esl "
			+ "              ON esl.id IN (SELECT ESL.id AS logid "
			+ "                            FROM   [eventservicelog] ESL "
			+ "                                   JOIN event EV "
			+ "                                     ON ESL.eventid = EV.id  and EV.PaymentInID is null"
			+ "                            WHERE  EV.paymentoutid = por.id "
			+ "                           ) "
			+ "       LEFT JOIN userresourcelock ur "
			+ "              ON por.id = ur.resourceid "
			+ "                 AND ur.lockreleasedon IS NULL "
			+ "                 AND ur.resourcetype = 'PAYMENT_OUT' "
			+ "ORDER  BY esl.servicetype,ESL.updatedon desc"),
				
	GET_PAYMENTOUT_STATUS_REASON("SELECT sur.Reason , ISNULL(psr.PaymentOutID,-1) AS PaymentOutID FROM StatusUpdateReason sur "
			+ "LEFT JOIN PaymentOutStatusReason psr ON psr.StatusUpdateReasonID=sur.id AND  psr.PaymentOutID=? "
			+ "WHERE  sur.Module IN ('PAYMENT_OUT','ALL') order by sur.Reason"),
	
	INSERT_PAYMENT_OUT_ACTIVITY_LOG_DETAIL("INSERT INTO [PaymentOutActivityLogDetail]([ActivityID], [ActivityType], [Log], [CreatedBy], [CreatedOn]) VALUES(?, (SELECT Id FROM ActivityTypeEnum WHERE Module=? and Type=?), ?, (select Id from [user] where SSOUserID=?), ?)"),
	
	INSERT_PAYMENT_OUT_ACTIVITY_LOG("INSERT INTO [PaymentOutActivityLog]  ( PaymentOutID, ActivityBy, [Timestamp], Comments, CreatedBy, CreatedOn, UserLockID) "
			+ " VALUES(?, (select Id from [user] where SSOUserID=?), "
			+ "?, ?, (select Id from [user] where SSOUserID=?), ?, "
			+ "(SELECT ID FROM UserResourceLock WHERE ResourceType = 1 AND ResourceID = ? AND LockReleasedOn IS NULL) )"),
	
	GET_PAYMENTOUT_STATUS_WITH_OHTER_STATUS("SELECT PCSE.Status, PO.Id FROM PaymentOut PO RIGHT JOIN PaymentComplianceStatusEnum PCSE ON PO.ComplianceStatus = PCSE.Id and PO.Id = ?"),
	
	GET_PAYMENTOUT_ACTIVITY_LOGS_BY_ROWS("WITH SELECTedID AS ( "
			+ " "
			+ " SELECT ( "
			+ " select SSOUserId from [user] where ID=pal.ActivityBy)  AS [User], "
			+ " pal.createdon, "
			+ " pald.log                    AS [Activity], "
			+ " ate.module  +' '+ ate.type AS [ActivityType], "
			+ " pal.Comments AS [Comment] "
			+ " FROM  PaymentOutActivitylog pal "
			+ " JOIN PaymentOutActivitylogdetail pald "
			+ " ON pal.id = pald.activityid "
			+ " AND pal.paymentOutId = ? "
			+ " JOIN activitytypeenum ate "
			+ " ON pald.activitytype = ate.id ) "
			+ "SELECT * FROM SELECTedID "
			+ "ORDER BY "
			+ " SELECTedID.CreatedOn desc  offset ? rows  FETCH next ? rows only"),
	
	GET_VIEWMORE_PAYMENTOUT_DETAILS("Select * from (SELECT Row_number() "
			+ "OVER (ORDER BY id DESC) AS rownum, PQueue.* from (select esl.id, "
			+ "       esl.eventId, "
			+ "      eve.PaymentOutID, "
			+ "       esl.entitytype, esl.entityid, "
			+ "      esl.createdon, "
			+ "      esl.updatedon, "
			+ "      esl.Summary, "
			+ "     (select SSOUserId from [user] where ID=esl.UpdatedBy) As UpdatedBy ,esl.status "
			+ "from Event eve Join EventServiceLog esl ON eve.id = esl.eventId "
			+ "where servicetype = (SELECT id "
			+ "        FROM   compliance_servicetypeenum "
			+ "           WHERE  code = ? ) "
			+ "and EntityType = ? "
			+ "and eve.PaymentOutID = ? "
			+ "and eve.PaymentInID is null )AS PQueue ) AS PQueue2   WHERE  rownum >= ? "
			+ " AND rownum <= ? ORDER  BY updatedon DESC"), 
	
	
	GET_ACTIVITY_LOGS_OF_PAYMENT_OUT("WITH SELECTedID AS ( "
			+ "SELECT ( "
			+ " select "
			+ " SSOUserId "
			+ " from "
			+ " [user] "
			+ " where "
			+ " ID = pal.ActivityBy "
			+ " ) As [User], "
			+ " pal.CreatedOn, "
			+ " pald.Log As [Activity], "
			+ " ate.module + ' ' + ate.type As [ActivityType], "
			+ " pal.Comments AS [Comment] "
			+ "FROM PaymentOutActivityLog pal "
			+ "JOIN PaymentOutActivityLogDetail pald ON "
			+ " pal.id = pald.ActivityId "
			+ " AND pal.paymentOutId = ? "
			+ "JOIN ActivityTypeEnum ate ON "
			+ " pald.ActivityType = ate.id ) "
			+ "SELECT * FROM SELECTedID "
			+ "ORDER BY "
			+ " SELECTedID.CreatedOn desc "),
	
	INSERT_PAYMENT_OUT_REASON("INSERT INTO [PaymentOutStatusReason]([PaymentOutID], [StatusUpdateReasonID], [CreatedBy], [CreatedOn], [UpdatedBy], [UpdatedOn]) VALUES(?, (SELECT Id FROM StatusUpdateReason WHERE Module IN ('PAYMENT_OUT','ALL') AND Reason=?), (select Id from [user] where SSOUserID=?), ?, (select Id from [user] where SSOUserID=?), ?)"),
	
	UPDATE_PAYMENT_OUT_STATUS("UPDATE [PaymentOut] SET ComplianceStatus=(SELECT Id FROM PaymentComplianceStatusEnum WHERE Status=?),UpdatedBy=(select id  from [user] where SSOUserID=?),UpdatedOn=?, isOnQueue=? WHERE Id=?"),
//added by neelesh pant
	VALIDATE_ACCOUNT_AND_CONTACT_FOR_PAYMENTSOUT( "select a.id,a.Accountstatus,a.Sanctionstatus,b.ComplianceStatus "
			+ "as ContactCompliancestatus  from Account a  join contact b "
			+ "on a.Id = b.accountid where a.id=6"),
	
	GET_PAYMENT_OUT_NATIONALITY_DISPLAY_NAME("select coun.displayName AS NationalityFullName from contactattribute conattri Join Country coun " 
	+ "ON JSON_Value(ATTRIBUTES,'$.country_of_nationality') = coun.code where conattri.id = ? "),
	
	GET_NO_OF_CONTACTS_FOR_ACCOUNT("select count(*) from Contact where AccountID = ?"),
	
	UPDATE_PAYMENT_OUT_IS_ON_QUEUE_STATUS("UPDATE [PaymentOut] SET  UpdatedBy=(select id  from [user] where SSOUserID=?), "
			+ " UpdatedOn=?, isOnQueue=? WHERE Id=?"),
	
	ORG_TABLE_JOIN("JOIN Organization org ON org.Id = payin.organizationID  "),
	PAYMENTIN_QUEUE_ATTRIBUTE_FILTER(" SELECT p.id AS paymentid  FROM   comp.paymentinattribute P " 
			+ "{COUNTRY_JOIN} "),
	
	GET_MOST_RECENT_PAYMENTOUT("SELECT MAX(poa.id) as id, A.type FROM PaymentOut P JOIN PaymentOutAttribute poa ON P.id=poa.id " + 
			" JOIN Account A ON P.accountid= A.id" + 
			" WHERE A.TradeAccountnumber=?" + 
			" AND (JSON_VALUE(ATTRIBUTES, '$.beneficiary.account_number'))=? group by A.type"),
	
	USER_FILTER_JOIN(" JOIN [USER] usr ON usr.id = ur.createdby"),
	
	GET_SERVICE_FAILURE_PAYMENT_OUT_DETAILS("SELECT po.id AS paymentID, "
			+ " po.[ContractNumber], "
			+ " po.TradePaymentID, "
			+ " o.Code AS orgCode, "
			+ " o.id AS orgID, "
			+ " po.AccountID, "
			+ " po.ContactID, "
			+ " po.compliancestatus "
			+ "FROM PaymentOut po "
			+ "JOIN Organization o ON po.OrganizationID = o.id "
			+ "JOIN Account ac ON po.accountid = ac.id "
			+ "WHERE "
			+ " po.ComplianceStatus = 4 "
			+ " AND (po.fraugsterstatus IN(8) "
			+ " OR po.SanctionStatus IN(8) "
			+ " OR po.BlacklistStatus IN(8) "
			+ " OR po.CustomCheckStatus IN(8)) "
			+ " AND po.createdon BETWEEN ? AND ? "),
	
	GET_SERVICE_FAILURE_PAYMENT_OUT_COUNT("SELECT "
			+ " Count(CASE WHEN po.FraugsterStatus IN (8) THEN 1 ELSE NULL END) AS Fraugster_Fail," 
			+ " Count(CASE WHEN po.SanctionStatus IN (8) THEN 1 ELSE NULL END) AS Sanction_Fail, "
			+ " Count(CASE WHEN po.BlacklistStatus IN (8) THEN 1 ELSE NULL END) AS Blacklist_Fail, "
			+ " Count(CASE WHEN po.CustomCheckStatus IN (8) THEN 1 ELSE NULL END) AS CustomCheck_Fail "
			+ "FROM PaymentOut po "
			+ "WHERE"
			+ " po.ComplianceStatus = 4 "
			+ " AND po.createdon BETWEEN ? AND ? "
			),
	
	INSERT_INTO_REPROCESS_FAILED ("INSERT INTO ReproccessFailed " 
            + " (TransType, BatchId, TransId, Status, RetryCount, CreatedBy, CreatedOn)"
            + " VALUES(?, ?, ?, ?, ?, ?, ?)" 
            ),
	
	GET_FIRST_FAILED_RECORD("select TOP 1 * from ReproccessFailed where BatchId = ? and TransType = ?"),
	
	UPDATE_FAILED_PAYMENT_OUT("UPDATE ReproccessFailed set Status = ? where id = ?"),
	
	GET_REPROCESS_STATUS_FOR_FAILED_RECORD("SELECT Status from ReproccessFailed where TransId = ? AND TransType = ? "), 
	
	DELETE_REPROCESS_FAILED("DELETE from ReproccessFailed where Status = 3"), //AT-4289 - delete pass check records
	
	RESEED_REPROCESS_FAILED_AFTER_DELETE("DBCC CHECKIDENT ('ReproccessFailed', RESEED, 0)"),
	
	GET_REPROCESS_ELIGIBLE_PAYMENTS("SELECT * FROM ReproccessFailed where BatchId = ? and TransType = ? "),
	
	GET_MAX_BATCH_ID_FROM_REPROCESS_FAILED("SELECT Max(BatchId) AS MaxBatchId FROM ReproccessFailed"),
	
	//GET_REPROCCESS_STATUS("SELECT COUNT(Status) as Status FROM ReproccessFailed WHERE Status = ? AND BatchId = ?"),
	GET_REPROCCESS_STATUS("SELECT COUNT(Status) as Status FROM ReproccessFailed WHERE RetryCount = 1 AND BatchId = ?"), //AT-4289
	
	//Add for AT-3161
	GET_FRAUD_PREDICT_FLAG_FOR_CUSTOM_RULE("SELECT JSON_VALUE(a.[Attribute], '$.fraudPredictCustomCheckEnabled') AS alwaysPass, b.Code FROM compliance_ServiceProviderAttribute a "
			+ " LEFT JOIN compliance_ServiceProvider b on a.ID = b.ID where b.Code = 'FRAUD_PREDICT_SIGNUP'"),
	
	UPDATE_CONTACT_POI_EXISTS_FLAG("update Contact set POIExists = 1 where CRMContactID = ?"),//AT-3450
	
	//Add for AT-4289
	COUNT_REPROCESS_FAILED("With Count AS( "
			+ "SELECT "
			+ "Count(CASE WHEN Status=1 THEN 1 ELSE null END) AS FailC, "
			+ "Count(CASE WHEN Status=2 THEN 1 ELSE null END) AS InPro, "
			+ "Count(CASE WHEN Status=3 THEN 1 ELSE null END) AS PASS "
			+ "FROM ReproccessFailed WHERE BatchId = ? GROUP BY status "
			+ ") "
			+ "SELECT SUM(PASS) 'Pass', SUM(FailC) 'Fail', SUM(InPro) 'Inprogress' "
			+ "FROM Count"),
	
	CLEAR_REPROCESS_FAILED("DELETE from ReproccessFailed");
	
	private String query;

	PaymentOutQueryConstant(String query) {
		this.query = query;

	}

	public String getQuery() {
		return this.query;
	}

}