/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'manish' at '18/7/16 3:41 PM' with Gradle 2.3
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.3/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'
version = '0.1'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}
*/

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.2.0"
    }
}

plugins {
    id "com.gradle.build-scan" version "1.16"
    id "org.sonarqube" version "2.7"
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'    
    termsOfServiceAgree = 'yes'                                  

    publishOnFailure()                                             
}

allprojects {
    group = 'com.atlas'
    
	Properties props = new Properties()
	File propsFile = new File("${rootProject.projectDir}" + "/buildConfig.properties")
	props.load(propsFile.newDataInputStream())
	//props.setProperty('vBuild', (((props.getProperty('vBuild')) as BigDecimal) + 1 ).toString())
	props.store(propsFile.newWriter(), null)	
	ext.versionProps = props
    version = ext.versionProps['vMajor'] + "." + ext.versionProps['vMinor'] + "." +	ext.versionProps['vPatch'] + "." + ext.versionProps['vBuild']
    //version = '0.1.0.1'
}

subprojects {
	apply plugin: "jacoco"
	apply plugin: "com.jfrog.artifactory"
	apply plugin: "maven-publish"
	apply plugin: "maven"
	apply plugin: "war"

	//version = '1.0.0.0'
	repositories {
		mavenCentral()
	}
	
    jacoco {
        toolVersion = "0.8.5"
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            csv.enabled true
            html.enabled true
        }
    }

    test.finalizedBy jacocoTestReport

	war {
		manifest {
			attributes 'Implementation-Vendor' : 'Currencies Direct Ltd.', 'Implementation-Title' : baseName//, 'Implementation-Version' : version
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.web
			}
		}
	}
}
