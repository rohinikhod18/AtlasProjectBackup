<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/integration 
	http://www.springframework.org/schema/integration/spring-integration.xsd 
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/cache 
	http://www.springframework.org/schema/cache/spring-cache.xsd">

	<context:component-scan base-package="com.currenciesdirect.gtg.compliance.compliancesrv" />
		 <bean id="applicationContextProvider"
			class="com.currenciesdirect.gtg.compliance.compliancesrv.util.ApplicationContextProvider"/>
		
		<!-- JobDetail objects contain all information needed to run a job -->
		
		<bean name="mqbroadcast" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<property name="jobClass" value="com.currenciesdirect.gtg.compliance.compliancesrv.core.MQSchedular" />
			<property name="durability" value="true" /> 
		</bean>
		<!-- <bean name="fraugsterCsvSchedular" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<property name="jobClass" value="com.currenciesdirect.gtg.compliance.compliancesrv.core.FraugsterCsvUploadSchedular" />
			<property name="durability" value="true" /> 
		</bean> -->
		
		<!-- <bean name="sanctionCsvSchedular" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<property name="jobClass" value="com.currenciesdirect.gtg.compliance.compliancesrv.core.SanctionCsvUploadScheduler" />
			<property name="durability" value="true" /> 
		</bean> -->
		
		<bean name="transactionMonitoringScheduler" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<property name="jobClass" value="com.currenciesdirect.gtg.compliance.compliancesrv.core.transactionmonitoringmq.TransactionMonitoringScheduler" />
			<property name="durability" value="true" /> 
		</bean>
		
		<bean name="postCardTransactionScheduler" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<property name="jobClass" value="com.currenciesdirect.gtg.compliance.compliancesrv.core.transactionmonitoringmq.PostCardTransactionSchedular" />
			<property name="durability" value="true" /> 
		</bean>
		
		<bean name="intuitionHistoricPaymentScheduler" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<property name="jobClass" value="com.currenciesdirect.gtg.compliance.compliancesrv.core.intuitionpaymentcsv.IntuitionHistoricPaymentScheduler" />
			<property name="durability" value="true" /> 
		</bean>

		<!-- Simple Trigger [MQ Scheduler trigger], run every 1 minute -->
		<bean id="simpleTrigger" 
            class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean"> 
			<property name="jobDetail" ref="mqbroadcast" />
			<property name="repeatInterval" value="60000" />
			<property name="startDelay" value="60000" />
		</bean>
	
 		<!--<bean id="fraugsterTrigger" 
            class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
	 		<property name="jobDetail" ref="fraugsterCsvSchedular" />
			<property name="cronExpression" value="${fraguster.csv.cronexpression}" /> -->
			<!-- <property name="startDelay" value="3000" /> -->
		<!-- </bean> -->
		
		<!-- <bean id="sanctionTrigger" 
            class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
	 		<property name="jobDetail" ref="sanctionCsvSchedular" />
			<property name="cronExpression" value="${sanction.csv.cronexpression}" />
			<property name="startDelay" value="3000" />
		</bean> -->
		
		<bean id="intuitionTrigger" 
            class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
			<property name="jobDetail" ref="transactionMonitoringScheduler" />
			<property name="cronExpression" value="${transactionmonitoring.cronexpression}" />
			<!--  <property name="repeatInterval" value="60000" /> -->
			<property name="startDelay" value="3000" />
		</bean>
		
		<bean id="intuitionPostCardTrigger" 
            class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
			<property name="jobDetail" ref="postCardTransactionScheduler" />
			<property name="cronExpression" value="${transactionmonitoring.cronexpression}" />
			<!--  <property name="repeatInterval" value="60000" /> -->
			<property name="startDelay" value="3000" />
		</bean>
		
		<bean id="intuitionHistoricPaymentTrigger" 
            class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
			<property name="jobDetail" ref="intuitionHistoricPaymentScheduler" />
			<property name="cronExpression" value="${intuition.historic.payment.cronexpression}" />
			<!--  <property name="repeatInterval" value="60000" /> -->
			<property name="startDelay" value="3000" />
		</bean>
		
		<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
			<property name="schedulerName" value="ComplianceScheduler"/>
			<property name="jobDetails">
				<list>
					<ref bean="mqbroadcast" />
					<!-- <ref bean="fraugsterCsvSchedular" /> -->
					<!-- <ref bean="sanctionCsvSchedular" /> -->
					<ref bean="transactionMonitoringScheduler" />
					<ref bean="postCardTransactionScheduler" />
					<ref bean="intuitionHistoricPaymentScheduler" />
				</list>
			</property>
			<property name="triggers">
				<list>
					<ref bean="simpleTrigger" />
					<!-- <ref bean="fraugsterTrigger" /> -->
					<!-- <ref bean="sanctionTrigger" /> -->
					<ref bean="intuitionTrigger" />
					<ref bean="intuitionPostCardTrigger" />
					<ref bean="intuitionHistoricPaymentTrigger" />
				</list>
			</property>
			<property name="quartzProperties">
				<props>
					<prop key="org.quartz.threadPool.threadCount">1</prop>
					<prop key="org.quartz.scheduler.instanceName">MQSchedulerInstance</prop>
		            <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
		 
		            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
		            <prop key="org.quartz.threadPool.threadPriority">5</prop>
		 
		            <prop key="org.quartz.jobStore.misfireThreshold">300000</prop>
		 			<prop key="org.quartz.jobStore.dataSource">quartzDS</prop>
		            <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
		            <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.MSSQLDelegate</prop>
		            <prop key="org.quartz.jobStore.useProperties">false</prop>
		            
		            <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
		            <prop key="org.quartz.jobStore.isClustered">true</prop>
		            <prop key="org.quartz.jobStore.clusterCheckinInterval">2000</prop>
		            
		            <prop key="org.quartz.dataSource.quartzDS.jndiURL">java:jboss/datasources/QuartzDS</prop>
		            
				</props>
			</property> 
		</bean>
	
		<!-- this enable caching in the system -->
		<cache:annotation-driven/>
		
		<!-- Enabling spring scheduler -->
		<task:annotation-driven scheduler="sanctionResponseCache"/>
		<!-- <task:executor id="myExecutor" pool-size="5"/> executor="myExecutor"-->
		<task:scheduler id="sanctionResponseCache" pool-size="10"/>
		
</beans>